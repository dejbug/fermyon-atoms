# Generated from weforum.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,8,310,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,4,0,26,8,0,11,0,
        12,0,27,1,0,1,0,1,1,4,1,33,8,1,11,1,12,1,34,1,2,4,2,38,8,2,11,2,
        12,2,39,1,2,1,2,4,2,44,8,2,11,2,12,2,45,1,2,1,2,4,2,50,8,2,11,2,
        12,2,51,1,2,1,2,4,2,56,8,2,11,2,12,2,57,1,2,1,2,4,2,62,8,2,11,2,
        12,2,63,1,2,1,2,4,2,68,8,2,11,2,12,2,69,1,2,1,2,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,4,6,246,8,6,11,6,12,6,247,1,6,1,
        6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,4,7,265,8,
        7,11,7,12,7,266,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,3,27,
        247,266,0,11,1,0,3,0,5,0,7,1,9,2,11,3,13,4,15,5,17,6,19,7,21,8,1,
        0,1,1,0,48,57,316,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,
        0,0,3,32,1,0,0,0,5,37,1,0,0,0,7,73,1,0,0,0,9,124,1,0,0,0,11,166,
        1,0,0,0,13,219,1,0,0,0,15,251,1,0,0,0,17,270,1,0,0,0,19,287,1,0,
        0,0,21,306,1,0,0,0,23,25,5,34,0,0,24,26,9,0,0,0,25,24,1,0,0,0,26,
        27,1,0,0,0,27,28,1,0,0,0,27,25,1,0,0,0,28,29,1,0,0,0,29,30,5,34,
        0,0,30,2,1,0,0,0,31,33,7,0,0,0,32,31,1,0,0,0,33,34,1,0,0,0,34,32,
        1,0,0,0,34,35,1,0,0,0,35,4,1,0,0,0,36,38,7,0,0,0,37,36,1,0,0,0,38,
        39,1,0,0,0,39,37,1,0,0,0,39,40,1,0,0,0,40,41,1,0,0,0,41,43,5,45,
        0,0,42,44,7,0,0,0,43,42,1,0,0,0,44,45,1,0,0,0,45,43,1,0,0,0,45,46,
        1,0,0,0,46,47,1,0,0,0,47,49,5,45,0,0,48,50,7,0,0,0,49,48,1,0,0,0,
        50,51,1,0,0,0,51,49,1,0,0,0,51,52,1,0,0,0,52,53,1,0,0,0,53,55,5,
        84,0,0,54,56,7,0,0,0,55,54,1,0,0,0,56,57,1,0,0,0,57,55,1,0,0,0,57,
        58,1,0,0,0,58,59,1,0,0,0,59,61,5,58,0,0,60,62,7,0,0,0,61,60,1,0,
        0,0,62,63,1,0,0,0,63,61,1,0,0,0,63,64,1,0,0,0,64,65,1,0,0,0,65,67,
        5,58,0,0,66,68,7,0,0,0,67,66,1,0,0,0,68,69,1,0,0,0,69,67,1,0,0,0,
        69,70,1,0,0,0,70,71,1,0,0,0,71,72,5,90,0,0,72,6,1,0,0,0,73,74,5,
        34,0,0,74,75,5,105,0,0,75,76,5,100,0,0,76,77,5,34,0,0,77,78,5,58,
        0,0,78,79,5,34,0,0,79,80,1,0,0,0,80,81,3,3,1,0,81,82,5,34,0,0,82,
        83,5,44,0,0,83,84,5,34,0,0,84,85,5,95,0,0,85,86,5,95,0,0,86,87,5,
        116,0,0,87,88,5,121,0,0,88,89,5,112,0,0,89,90,5,101,0,0,90,91,5,
        110,0,0,91,92,5,97,0,0,92,93,5,109,0,0,93,94,5,101,0,0,94,95,5,34,
        0,0,95,96,5,58,0,0,96,97,5,34,0,0,97,98,5,84,0,0,98,99,5,111,0,0,
        99,100,5,112,0,0,100,101,5,105,0,0,101,102,5,99,0,0,102,103,5,34,
        0,0,103,104,5,44,0,0,104,105,5,34,0,0,105,106,5,116,0,0,106,107,
        5,105,0,0,107,108,5,116,0,0,108,109,5,108,0,0,109,110,5,101,0,0,
        110,111,5,34,0,0,111,112,5,58,0,0,112,113,1,0,0,0,113,114,3,1,0,
        0,114,115,5,44,0,0,115,116,5,34,0,0,116,117,5,117,0,0,117,118,5,
        114,0,0,118,119,5,108,0,0,119,120,5,34,0,0,120,121,5,58,0,0,121,
        122,1,0,0,0,122,123,3,1,0,0,123,8,1,0,0,0,124,125,5,34,0,0,125,126,
        5,105,0,0,126,127,5,100,0,0,127,128,5,34,0,0,128,129,5,58,0,0,129,
        130,5,34,0,0,130,131,1,0,0,0,131,132,3,3,1,0,132,133,5,34,0,0,133,
        134,5,44,0,0,134,135,5,34,0,0,135,136,5,95,0,0,136,137,5,95,0,0,
        137,138,5,116,0,0,138,139,5,121,0,0,139,140,5,112,0,0,140,141,5,
        101,0,0,141,142,5,110,0,0,142,143,5,97,0,0,143,144,5,109,0,0,144,
        145,5,101,0,0,145,146,5,34,0,0,146,147,5,58,0,0,147,148,5,34,0,0,
        148,149,5,65,0,0,149,150,5,117,0,0,150,151,5,116,0,0,151,152,5,104,
        0,0,152,153,5,111,0,0,153,154,5,114,0,0,154,155,5,34,0,0,155,156,
        5,44,0,0,156,157,5,34,0,0,157,158,5,110,0,0,158,159,5,97,0,0,159,
        160,5,109,0,0,160,161,5,101,0,0,161,162,5,34,0,0,162,163,5,58,0,
        0,163,164,1,0,0,0,164,165,3,1,0,0,165,10,1,0,0,0,166,167,5,34,0,
        0,167,168,5,105,0,0,168,169,5,100,0,0,169,170,5,34,0,0,170,171,5,
        58,0,0,171,172,5,34,0,0,172,173,1,0,0,0,173,174,3,3,1,0,174,175,
        5,34,0,0,175,176,5,44,0,0,176,177,5,34,0,0,177,178,5,95,0,0,178,
        179,5,95,0,0,179,180,5,116,0,0,180,181,5,121,0,0,181,182,5,112,0,
        0,182,183,5,101,0,0,183,184,5,110,0,0,184,185,5,97,0,0,185,186,5,
        109,0,0,186,187,5,101,0,0,187,188,5,34,0,0,188,189,5,58,0,0,189,
        190,5,34,0,0,190,191,5,65,0,0,191,192,5,114,0,0,192,193,5,116,0,
        0,193,194,5,105,0,0,194,195,5,99,0,0,195,196,5,108,0,0,196,197,5,
        101,0,0,197,198,5,34,0,0,198,199,5,44,0,0,199,200,5,34,0,0,200,201,
        5,117,0,0,201,202,5,114,0,0,202,203,5,108,0,0,203,204,5,34,0,0,204,
        205,5,58,0,0,205,206,1,0,0,0,206,207,3,1,0,0,207,208,5,44,0,0,208,
        209,5,34,0,0,209,210,5,116,0,0,210,211,5,105,0,0,211,212,5,116,0,
        0,212,213,5,108,0,0,213,214,5,101,0,0,214,215,5,34,0,0,215,216,5,
        58,0,0,216,217,1,0,0,0,217,218,3,1,0,0,218,12,1,0,0,0,219,220,5,
        34,0,0,220,221,5,116,0,0,221,222,5,111,0,0,222,223,5,112,0,0,223,
        224,5,105,0,0,224,225,5,99,0,0,225,226,5,34,0,0,226,227,5,58,0,0,
        227,228,5,123,0,0,228,229,5,34,0,0,229,230,5,95,0,0,230,231,5,95,
        0,0,231,232,5,114,0,0,232,233,5,101,0,0,233,234,5,102,0,0,234,235,
        5,34,0,0,235,236,5,58,0,0,236,237,5,34,0,0,237,238,5,84,0,0,238,
        239,5,111,0,0,239,240,5,112,0,0,240,241,5,105,0,0,241,242,5,99,0,
        0,242,243,5,58,0,0,243,245,1,0,0,0,244,246,9,0,0,0,245,244,1,0,0,
        0,246,247,1,0,0,0,247,248,1,0,0,0,247,245,1,0,0,0,248,249,1,0,0,
        0,249,250,5,34,0,0,250,14,1,0,0,0,251,252,5,34,0,0,252,253,5,97,
        0,0,253,254,5,117,0,0,254,255,5,116,0,0,255,256,5,104,0,0,256,257,
        5,111,0,0,257,258,5,114,0,0,258,259,5,115,0,0,259,260,5,34,0,0,260,
        261,5,58,0,0,261,262,5,91,0,0,262,264,1,0,0,0,263,265,9,0,0,0,264,
        263,1,0,0,0,265,266,1,0,0,0,266,267,1,0,0,0,266,264,1,0,0,0,267,
        268,1,0,0,0,268,269,5,93,0,0,269,16,1,0,0,0,270,271,5,34,0,0,271,
        272,5,100,0,0,272,273,5,101,0,0,273,274,5,115,0,0,274,275,5,99,0,
        0,275,276,5,114,0,0,276,277,5,105,0,0,277,278,5,112,0,0,278,279,
        5,116,0,0,279,280,5,105,0,0,280,281,5,111,0,0,281,282,5,110,0,0,
        282,283,5,34,0,0,283,284,5,58,0,0,284,285,1,0,0,0,285,286,3,1,0,
        0,286,18,1,0,0,0,287,288,5,34,0,0,288,289,5,112,0,0,289,290,5,117,
        0,0,290,291,5,98,0,0,291,292,5,108,0,0,292,293,5,105,0,0,293,294,
        5,115,0,0,294,295,5,104,0,0,295,296,5,101,0,0,296,297,5,100,0,0,
        297,298,5,65,0,0,298,299,5,116,0,0,299,300,5,34,0,0,300,301,5,58,
        0,0,301,302,5,34,0,0,302,303,1,0,0,0,303,304,3,5,2,0,304,305,5,34,
        0,0,305,20,1,0,0,0,306,307,9,0,0,0,307,308,1,0,0,0,308,309,6,10,
        0,0,309,22,1,0,0,0,11,0,27,34,39,45,51,57,63,69,247,266,1,6,0,0
    ]

class weforumLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Topic = 1
    Author = 2
    Article = 3
    TopicRef = 4
    AuthorsRef = 5
    Description = 6
    PublishedAt = 7
    ANY = 8

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Topic", "Author", "Article", "TopicRef", "AuthorsRef", "Description", 
            "PublishedAt", "ANY" ]

    ruleNames = [ "String", "Integer", "Date", "Topic", "Author", "Article", 
                  "TopicRef", "AuthorsRef", "Description", "PublishedAt", 
                  "ANY" ]

    grammarFileName = "weforum.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


